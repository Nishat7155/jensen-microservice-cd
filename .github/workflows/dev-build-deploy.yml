
name: Build and Deploy to Cloud Run
on: workflow_dispatch

#on:
  #push:
    #branches: [ "main" ]

env:
  PROJECT_ID: '${{ secrets.GCP_PROJECTID }}' # TODO: update Google Cloud project id
  GCR_LOCATION:  '${{ secrets.GCP_GCR_LOCATION }}' # TODO: update Artifact Registry location
  SERVICE: '${{ secrets.GCP_SERVICE_NAME }}' # TODO: update Cloud Run service name
  REGION: '${{ secrets.GCP_REGION }}' # TODO: update Cloud Run service region

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
          version: '>= 363.0.0'

      - name: Authorize Docker push
        run: gcloud auth configure-docker
       
          



      - name: Build and Push Container
        run: |-
          docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build
  deploy_with_terraform:
    name: Deploy with Terraform
    permissions:
        contents: 'read'
        id-token: 'write'
        
    runs-on: ubuntu-latest
    steps:   
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform authentication to GCP
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: Terraform init
        run: terraform init -backend-config="environments/${{ inputs.ENVIRONMENT}}.backend.json"
        working-directory: ./infrastructure/
      - name: Terraform plan
        run: |-
          terraform plan \
          -var="container_image=gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} \
          -var-file="environments/${{ inputs.ENVIRONMENT}}.json" \
          -out=PLAN
        working-directory: ./infrastructure/
      - name: Terraform apply
        run: terraform apply PLAN
        working-directory: ./infrastructure/environments/

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
